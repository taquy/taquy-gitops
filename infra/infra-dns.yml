version: '3'

volumes:
  traefik-ssl-vol:
    external: true
  infra-redis-vol:
    external: true
  authelia-source-vol:
    external: true
  authelia-config-vol:
    external: true
  authelia-mysql-vol:
    external: true
  authelia-redis-vol:
    external: true
  heimdall-vol:
    external: true
  pihole-vol:
    external: true
  pihole-dns-vol:
    external: true
  aws-credentials-vol:
    external: true
  portainer-vol:
    external: true
  ldap-source-vol:
    external: true
  ldap-slapd-vol:
    external: true
  ldap-certs-vol:
    external: true
  owncloud-source-vol:
    external: true
  owncloud-mysql-vol:
    external: true
  owncloud-redis-vol:
    external: true
  rocketchat-source-vol:
    external: true
  rocketchat-mongo-vol:
    external: true
  rocketchat-hubot-vol:
    external: true
  openvpn-vol:
    external: true

services:
  # sso.taquy.dev
  authelia:
    image: authelia/authelia
    container_name: authelia
    restart: unless-stopped
    depends_on:
      - redis-authelia
      - mysql-authelia
    environment:
      TZ: Vietnam/Hanoi
    volumes:
      - authelia-source-vol:/var/lib/authelia
      # - authelia-config-vol:/config
      - ./config:/config
    expose:
      - 9091
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.authelia.rule=Host(`sso.taquy.dev`)'
      - 'traefik.http.routers.authelia.entrypoints=websecure'
      - 'traefik.http.routers.authelia.tls=true'
      - 'traefik.http.routers.authelia.tls.certresolver=myresolver'
      - 'traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/verify?rd=https://sso.taquy.dev'  # yamllint disable-line rule:line-length
      - 'traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true'
      - 'traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email'  # yamllint disable-line rule:line-length
      - 'traefik.http.middlewares.authelia-basic.forwardauth.address=http://authelia:9091/api/verify?auth=basic'
      - 'traefik.http.middlewares.authelia-basic.forwardauth.trustForwardHeader=true'
      - 'traefik.http.middlewares.authelia-basic.forwardauth.authResponseHeaders=Remote-User, Remote-Groups, Remote-Name, Remote-Email'

  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    restart: always
    depends_on:
      - traefik
    environment:
      - PMA_ARBITRARY=1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.taquy.dev`)"
      - "traefik.http.routers.phpmyadmin.entrypoints=websecure"
      - "traefik.http.routers.phpmyadmin.tls=true"
      - "traefik.http.routers.phpmyadmin.tls.certresolver=myresolver"
      - "traefik.http.routers.phpmyadmin.service=phpmyadmin"
      - "traefik.http.services.phpmyadmin.loadbalancer.server.port=80"
   
  mysql-authelia:
    image: mysql
    container_name: mysql-authelia
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root1234
      MYSQL_USER: authelia
      MYSQL_PASSWORD: root1234
      MYSQL_DATABASE: authelia
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - authelia-mysql-vol:/var/lib/mysql

  redis-authelia:
    image: redis:alpine
    container_name: redis-authelia
    restart: unless-stopped
    volumes:
      - authelia-redis-vol:/data
    environment:
      TZ: Vietnam/Hanoi

  # traefik.taquy.dev
  traefik:
    image: traefik:2.4
    container_name: traefik
    restart: unless-stopped
    depends_on:
      - authelia
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.taquy.dev`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.service=traefik"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
      - "traefik.http.routers.traefik.tls.domains[0].main=taquy.dev"
      - "traefik.http.routers.traefik.tls.domains[0].sans=*.taquy.dev"
      - "traefik.http.routers.traefik.service=api@internal"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./acme.json:/acme.json
      - aws-credentials-vol:/root/.aws:ro
    environment:
      TZ: "Vietnam/Hanoi"
      AWS_PROFILE: "taquy-route53"
    ports:
      # encrypted ports
      - "443:443"
      - "103.166.183.142:853:853"
      # unecrypted ports
      - "80:80"
      - "103.166.183.142:53:53"
      - "103.166.183.142:53:53/udp"
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.dns-tcp-tls.address=:853"
      - "--entrypoints.dns-tcp.address=:53"
      - "--entrypoints.dns-udp.address=:53/udp"
      - "--entrypoints.dhcp-udp.address=:67/udp"
      - "--entrypoints.portainer.address=:9443"
      - "--entrypoints.ldap-389.address=:389"
      - "--entrypoints.ldap-636.address=:636"
      # TODO: only enable dns challenge for first time deployment
      - "--certificatesresolvers.myresolver.acme.dnschallenge=false"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=route53"
      - "--certificatesresolvers.myresolver.acme.storage=/acme.json"

  # whoami.taquy.dev
  whoami:
    image: containous/whoami
    container_name: whoami
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.taquy.dev`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls=true"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"
      - "traefik.http.routers.whoami.middlewares=authelia@docker"

  # console.taquy.dev
  heimdall:
    image: ghcr.io/linuxserver/heimdall
    container_name: heimdall
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Vietnam/Hanoi
    volumes:
      - heimdall-vol:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.heimdall.rule=Host(`console.taquy.dev`)"
      - "traefik.http.routers.heimdall.entrypoints=websecure"
      - "traefik.http.routers.heimdall.tls=true"
      - "traefik.http.routers.heimdall.tls.certresolver=myresolver"
      - "traefik.http.routers.heimdall.middlewares=authelia-basic@docker"
 
  # pihole.taquy.dev
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    restart: unless-stopped
    environment:
      TZ: 'Vietnam/Hanoi'
      WEBPASSWORD: 'root1234'
      PUID: '1000'
      PGID: '1000'
    volumes:
      - pihole-vol:/etc/pihole/'
      - pihole-dns-vol/:/etc/dnsmasq.d/'
    dns:
      - 8.8.8.8
      - 1.1.1.1
    cap_add:
      - NET_ADMIN
    labels:
      - "traefik.enable=true"
      # http
      - "traefik.http.routers.pihole-web.rule=Host(`pihole.taquy.dev`)"
      - "traefik.http.routers.pihole-web.entrypoints=websecure"
      - "traefik.http.routers.pihole-web.tls=true"
      - "traefik.http.routers.pihole-web.tls.certresolver=myresolver"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"
      # dns insecure
      - "traefik.tcp.routers.pihole-dns.rule=HostSNI(`pihole.taquy.dev`)"
      - "traefik.tcp.routers.pihole-dns.entrypoints=dns-tcp"
      - "traefik.tcp.routers.pihole-dns.service=pihole"
      # dns secure
      - "traefik.tcp.routers.pihole-dns-tls.rule=HostSNI(`pihole.taquy.dev`)"
      - "traefik.tcp.routers.pihole-dns-tls.entrypoints=dns-tcp-tls"
      - "traefik.tcp.routers.pihole-dns-tls.service=pihole"
      - "traefik.tcp.routers.pihole-dns-tls.tls=true"
      - "traefik.tcp.routers.pihole-dns-tls.tls.certresolver=myresolver"
      # dns insecure & secure service
      - "traefik.tcp.services.pihole.loadbalancer.server.port=53"
      # dns over udp
      - "traefik.udp.routers.pihole-dns-udp.entrypoints=dns-udp"
      - "traefik.udp.routers.pihole-dns-udp.service=pihole-dns-udp"
      - "traefik.udp.services.pihole-dns-udp.loadbalancer.server.port=53"
      # dhcp over udp
      - "traefik.udp.routers.pihole-dhcp-upd.entrypoints=dhcp-udp"
      - "traefik.udp.routers.pihole-dhcp-upd.service=pihole-dhcp-upd"
      - "traefik.udp.services.pihole-dhcp-upd.loadbalancer.server.port=67"

  # portainer.taquy.dev
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-vol:/data
    labels:
    # portainer web
    - "traefik.enable=true"
    - "traefik.http.routers.portainer.rule=Host(`portainer.taquy.dev`)"
    - "traefik.http.routers.portainer.entrypoints=websecure"
    - "traefik.http.routers.portainer.tls=true"
    - "traefik.http.routers.portainer.tls.certresolver=myresolver"
    - "traefik.http.routers.portainer.service=portainer"
    - "traefik.http.services.portainer.loadbalancer.server.port=9000"
    # portainer backend
    - "traefik.http.routers.portainer-backend.rule=Host(`portainer.taquy.dev`)"
    - "traefik.http.routers.portainer-backend.entrypoints=portainer"
    - "traefik.http.routers.portainer-backend.tls=true"
    - "traefik.http.routers.portainer-backend.tls.certresolver=myresolver"
    - "traefik.http.routers.portainer-backend.service=portainer-backend"
    - "traefik.http.services.portainer-backend.loadbalancer.server.port=9443"

  # transmission:
  #   image: lscr.io/linuxserver/transmission
  #   container_name: transmission
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/London
  #     - TRANSMISSION_WEB_HOME=/combustion-release/ #optional
  #     - USER=username #optional
  #     - PASS=password #optional
  #     - WHITELIST=iplist #optional
  #     - HOST_WHITELIST=dnsnane list #optional
  #   volumes:
  #     - <path to data>:/config
  #     - <path to downloads>:/downloads
  #     - <path to watch folder>:/watch
  #   ports:
  #     - 9091:9091
  #     - 51413:51413
  #     - 51413:51413/udp
  #   restart: unless-stopped

  # ldap.taquy.dev:389,636
  openldap:
    image: osixia/openldap:latest
    container_name: openldap
    environment:
      LDAP_ORGANISATION: "taquy"
      LDAP_DOMAIN: "taquy.dev"
      LDAP_BASE_DN: "dc=taquy,dc=dev"
      LDAP_ADMIN_USERNAME: admin # login dn: cn=admin,dc=taquy,dc=dev
      LDAP_ADMIN_PASSWORD: "root1234"
      LDAP_CONFIG_PASSWORD: "config1234"
      LDAP_READONLY_USER: "true"
      LDAP_READONLY_USER_USERNAME: "readonly"
      LDAP_READONLY_USER_PASSWORD: "readonly"
      LDAP_TLS: "false"
      LDAP_TLS_DH_PARAM_FILENAME: "dhparam.pem"
      LDAP_TLS_ENFORCE: "false"
      LDAP_REPLICATION: "false"
      KEEP_EXISTING_CONFIG: "false"
      LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
    tty: true
    stdin_open: true
    volumes:
      - ldap-source-vol:/var/lib/ldap
      - ldap-slapd-vol:/etc/ldap/slapd.d
      - ldap-certs-vol:/container/service/slapd/assets/certs/
    labels:
      - "traefik.enable=true"
      # ldap 389
      - "traefik.tcp.routers.ldap-389.rule=HostSNI(`ldap.taquy.dev`)"
      - "traefik.tcp.routers.ldap-389.entrypoints=ldap-389"
      - "traefik.tcp.routers.ldap-389.tls=true"
      - "traefik.tcp.routers.ldap-389.tls.certresolver=myresolver"
      - "traefik.tcp.routers.ldap-389.service=ldap-389"
      - "traefik.tcp.services.ldap-389.loadbalancer.server.port=389"
      # ldap 636
      - "traefik.tcp.routers.ldap-636.rule=HostSNI(`ldap.taquy.dev`)"
      - "traefik.tcp.routers.ldap-636.entrypoints=ldap-636"
      - "traefik.tcp.routers.ldap-636.tls=true"
      - "traefik.tcp.routers.ldap-636.tls.certresolver=myresolver"
      - "traefik.tcp.routers.ldap-636.service=ldap-636"
      - "traefik.tcp.services.ldap-636.loadbalancer.server.port=636"

  # ldap.taquy.dev:443
  phpldapadmin:
    image: osixia/phpldapadmin:latest
    container_name: phpldapadmin
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: "openldap"
      PHPLDAPADMIN_HTTPS: "false"
    depends_on:
      - openldap
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ldap-admin.rule=Host(`ldap.taquy.dev`)"
      - "traefik.http.routers.ldap-admin.entrypoints=websecure"
      - "traefik.http.routers.ldap-admin.tls.certresolver=myresolver"

  # ws3.taquy.dev
  owncloud:
    image: owncloud/server:latest
    container_name: owncloud
    restart: always
    depends_on:
      - mariadb-owncloud
      - redis-owncloud
    environment:
      OWNCLOUD_DOMAIN: ws3.taquy.dev
      OWNCLOUD_DB_TYPE: mysql
      OWNCLOUD_DB_NAME: owncloud
      OWNCLOUD_DB_USERNAME: owncloud
      OWNCLOUD_DB_PASSWORD: ${OWNCLOUD_MYSQL_PASSWORD}
      OWNCLOUD_DB_HOST: mariadb-owncloud
      OWNCLOUD_ADMIN_USERNAME: ${OWNCLOUD_ADMIN_USERNAME}
      OWNCLOUD_ADMIN_PASSWORD: ${OWNCLOUD_ADMIN_PASSWORD}
      OWNCLOUD_MYSQL_UTF8MB4: "true"
      OWNCLOUD_REDIS_ENABLED: "true"
      OWNCLOUD_REDIS_HOST: redis-owncloud
    volumes:
      - owncloud-source-vol:/mnt/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.owncloud.rule=Host(`ws3.taquy.dev`)"
      - "traefik.http.routers.owncloud.entrypoints=websecure"
      - "traefik.http.routers.owncloud.tls.certresolver=myresolver"
      - "traefik.http.routers.owncloud.service=owncloud"
      - "traefik.http.services.owncloud.loadbalancer.server.port=8080"
  mariadb-owncloud:
    image: mariadb:10.5
    container_name: mariadb-owncloud
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${OWNCLOUD_MYSQL_ROOT_PASSWORD}
      MYSQL_USER: owncloud
      MYSQL_PASSWORD: ${OWNCLOUD_MYSQL_PASSWORD}
      MYSQL_DATABASE: owncloud
    command: ["--max-allowed-packet=128M", "--innodb-log-file-size=64M"]
    volumes:
      - owncloud-mysql-vol:/var/lib/mysql
  redis-owncloud:
    image: redis:6
    container_name: redis-owncloud
    restart: always
    command: ["--databases", "1"]
    volumes:
      - owncloud-redis-vol:/data

  # hubot.taquy.dev
  hubot:
    image: rocketchat/hubot-rocketchat:latest
    container_name: hubot-rocketchat
    restart: unless-stopped
    environment:
      - ROCKETCHAT_URL=rocketchat:3000
      - ROCKETCHAT_ROOM=GENERAL
      - ROCKETCHAT_USER=bot
      - ROCKETCHAT_PASSWORD=botpassword
      - BOT_NAME=bot
      - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics
    depends_on:
      - rocketchat
    volumes:
      - rocketchat-hubot-vol:/home/hubot/scripts
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.hubot.rule=Host(`hubot.taquy.dev`)"
      - "traefik.tcp.routers.hubot.entrypoints=websecure"
      - "traefik.tcp.routers.hubot.tls.certresolver=myresolver"
      - "traefik.tcp.routers.hubot.service=hubot"
      - "traefik.tcp.services.hubot.loadbalancer.server.port=8080"

  # chat.taquy.dev
  rocketchat:
    image: rocketchat/rocket.chat:3.7.1
    restart: unless-stopped
    command: >
      bash -c
        "for i in `seq 1 30`; do
          INSTANCE_IP=$$(hostname -i) node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    volumes:
     - ./data/uploads:/app/uploads
     - /tmp:/tmp
    environment:
     - PORT=3000
     - ROOT_URL=http://${ROCKETCHAT_HOST}
     - MONGO_URL=mongodb://mongo:27017/rocketchat
     - MONGO_OPLOG_URL=mongodb://mongo:27017/local
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rocketchat.rule=Host(`chat.taquy.dev`)"
      - "traefik.http.routers.rocketchat.entrypoints=websecure"
      - "traefik.http.routers.rocketchat.tls.certresolver=myresolver"
      - "traefik.http.routers.rocketchat.service=rocketchat"
      - "traefik.http.services.rocketchat.loadbalancer.server.port=3000"
    depends_on:
      - mongo

  mongo:
    image: mongo:4.0
    container_name: mongo
    restart: unless-stopped
    command: mongod --oplogSize 128 --replSet rs0
    volumes:
      - ./data/db:/data/db
      - ./data/backups:/dump

  mongo-init-replica:
    image: mongo:4.0
    container_name: mongo-replica
    command: >
      bash -c
        "for i in `seq 1 30`; do
          mongo mongo/rocketchat --eval \"
            rs.initiate({
              _id: 'rs0',
              members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    depends_on:
      - mongo

  # vpn.taquy.dev
  ## https://github.com/kylemanna/docker-openvpn/blob/master/docs/docker-compose.md

  # git.taquy.dev
  ## https://docs.gitlab.com/ee/install/docker.html

  # smtp.taquy.dev
  ## https://github.com/docker-mailserver/docker-mailserver

  # registry.taquy.dev
  ## https://github.com/jfrog/artifactory-docker-examples/blob/master/docker-compose/artifactory/artifactory-pro.yml