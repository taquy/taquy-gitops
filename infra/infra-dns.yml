version: '3'

networks:
  taquy-traefik:
    external: true
volumes:
  traefik-ssl-vol:
    external: true
  infra-redis-vol:
    external: true
  authelia-vol:
    external: true

services:
  # https://github.com/authelia/authelia/blob/master/examples/compose/lite/docker-compose.yml
  # https://www.youtube.com/watch?v=u6H-Qwf4nZA&t=949s&ab_channel=TechnoTim
  # authelia:
  #   image: authelia/authelia
  #   container_name: authelia
  #   restart: unless-stopped
  #   volumes:
  #     - authelia-vol:/config
  #   networks:
  #     - taquy-traefik
  #   labels:
  #     - 'traefik.enable=true'
  #     - 'traefik.http.routers.authelia.rule=Host(`authelia.taquy.dev`)'
  #     - 'traefik.http.routers.authelia.entrypoints=https'
  #     - 'traefik.http.routers.authelia.tls=true'
  #     - 'traefik.http.routers.authelia.tls.certresolver=letsencrypt'
  #     - 'traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/verify?rd=https://authelia.taquy.dev'  # yamllint disable-line rule:line-length
  #     - 'traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true'
  #     - 'traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email'  # yamllint disable-line rule:line-length
  #   ports:
  #     - 9091:9091
    # env_file:
    #   - infra-dns.env
  
  
  # TODO: redis not ready for traefik and password yet
  # infra-redis:
  #   image: redis:alpine
  #   container_name: infra-redis
  #   restart: unless-stopped
  #   volumes:
  #     - infra-redis-vol:/data
  #   networks:
  #     - taquy-traefik
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.infra-redis.rule=Host(`infra-redis.taquy.dev`)"
  #     - "traefik.http.routers.infra-redis.entrypoints=tcp"
  #   env_file:
  #     - infra-dns.env
  #   command: 'redis-server --requirepass xxx'

  traefik:
    image: traefik:2.4
    container_name: traefik
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-ssl-vol:/letsencrypt
      # - ./dynamic.yaml:/dynamic.yaml
    networks:
      - taquy-traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.taquy.dev`)"
      - "traefik.http.routers.api.service=api@internal"
      # web secured routing
      - "traefik.http.routers.traefik-web-secured.rule=Host(`traefik.taquy.dev`)"
      - "traefik.http.routers.traefik-web-secured.entrypoints=web-secured"
      - "traefik.http.routers.traefik-web-secured.tls.certresolver=taquy-resolver"
    environment:
      TZ: "Vietnam/Hanoi"x
    ports:
      - 80:80
      - 8080:8080
      - 443:443
    command:
      # config api
      - "--api.insecure=true"
      - "--api.dashboard=true"
      # config providers
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=taquy-traefik"
      # config logging
      - "--log.level=DEBUG"
      # entry points
      - "--entryPoints.web.address=:80"
      - "--entryPoints.web-secured.address=:443"
      # ssl certificates
      - "--certificatesresolvers.taquy-resolver.acme.tlschallenge=true"
      - "--certificatesresolvers.taquy-resolver.acme.email=taquy.pb@gmail.com"
      - "--certificatesresolvers.taquy-resolver.acme.storage=/letsencrypt/acme.json"
      # - "--certificatesresolvers.taquy-resolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
   
  whoami:
    image: containous/whoami
    container_name: whoami
    restart: unless-stopped
    networks:
      - taquy-traefik
    labels:
      - "traefik.enable=true"
      # web routing
      - "traefik.http.routers.whoami-web.rule=Host(`whoami.taquy.dev`)"
      - "traefik.http.routers.whoami-web.entrypoints=web"
      - "traefik.http.middlewares.test-redirectscheme.redirectscheme.scheme=https"
      - "traefik.http.middlewares.test-redirectscheme.redirectscheme.permanent=true"
      # web secured routing
      - "traefik.http.routers.whoami-web-secured.rule=Host(`whoami.taquy.dev`)"
      - "traefik.http.routers.whoami-web-secured.entrypoints=web-secured"
      - "traefik.http.routers.whoami-web-secured.tls.certresolver=taquy-resolver"

