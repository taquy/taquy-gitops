version: '3'

volumes:
  mongo-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /data/mongo
  redis-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /data/redis
  es-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /data/es

services:
  es:
    container_name: taquy-es
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
    restart: always
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data:/usr/share/elasticsearch/data
    network_mode: bridge
    # logging:
    #   driver: awslogs
    #   options:
    #     awslogs-region: "us-east-1"
    #     awslogs-group: "taquy"
    #     awslogs-stream: "elasticsearch"
    #     awslogs-create-group: "true"

  redis:
    image: redis:alpine
    container_name: taquy-redis
    restart: always
    ports:
      - 6379:6379
    entrypoint: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    network_mode: bridge
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: httpd.acces
    # logging:
    #   driver: awslogs
    #   options:
    #     awslogs-region: us-east-1
    #     awslogs-group: "taquy"
    #     awslogs-stream: "redis"
    #     awslogs-create-group: "true"

  mongo:
    image: mongo:latest
    container_name: taquy-mongo
    restart: always
    ports:
      - 27017:27017
      - 27018:27018
    environment:
      MONGO_INITDB_DATABASE: admin
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root1234
    volumes:
      - mongo-data:/data/db
    network_mode: bridge
    logging:
      driver: awslogs
      options:
        awslogs-region: "us-east-1"
        awslogs-group: "taquy"
        awslogs-stream: "mongo"
        awslogs-create-group: "true"

  application:
    image: 397818416365.dkr.ecr.us-east-1.amazonaws.com/taquy-api:latest
    container_name: taquy-api
    ports:
     - 90:3000
    restart: always
    links:
      - es
      - mongo
      - redis
    network_mode: bridge
    logging:
      driver: awslogs
      options:
        awslogs-region: "us-east-1"
        awslogs-group: "taquy"
        awslogs-stream: "api"
        awslogs-create-group: "true"